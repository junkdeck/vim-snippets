snippet ir
	import React from 'react'
snippet irc
	import React, {Component} from 'react'
snippet ird
	import ReactDOM from 'react-dom'
snippet cdm
	componentDidMount() {
		${1}
	}
snippet cdup
	componentDidUpdate(prevProps, prevState) {
		${1}
	}
snippet cwm
	componentWillMount() {
		${1}
	}
snippet cwr
	componentWillReceiveProps(nextProps) {
		${1}
	}
snippet cwun
	componentWillUnmount() {
		${1}
	}
snippet cwu
	componentWillUpdate(nextProps, nextState) {
		${1}
	}
snippet fup
	forceUpdate(${1:callback})
snippet dp
	static defaultProps = {
		${1}: ${2},
	}
snippet st
	state = {
		${1}: ${2},
	}
snippet pt
	static propTypes = {
		${1}: React.PropTypes.${2:type},
	}
snippet rcc
	class ${1:ClassName} extends React.Component {
		render() {
			return (
				${0:<div />}
			)
		}
	}
snippet rdr
	const ${1} = (state = ${2}, action) => {
		switch(action.type){
			${3}
			default:
				return state
		}
	}
snippet ercc
	export default class ${1:ClassName} extends React.Component {
		render() {
			return (
				${0:<div />}
			)
		}
	}
snippet ctor
	constructor() {
		super()
		${1}
	}
snippet ren
	render() {
		return (
			${1:<div />}
		)
	}
snippet sst
	this.setState({
		${1}: ${2}
	})
snippet scu
	shouldComponentUpdate(nextProps, nextState) {
		${1}
	}
snippet prp i
	this.props.${1}
snippet ste i
	this.state.${1}
snippet mstp
	const mapStateToProps = state => ({
		${1}
	})
snippet mdtp
	const mapDispatchToProps = dispatch => ({
		...bindActionCreators({
				${1}
			}, dispatch)
	})
snippet redux
	import {bindActionCreators} from 'redux'
	import {connect} from 'react-redux'
snippet rdc
	export default connect(${1})(${2})
snippet rc
	class ${1} extends Component{
		render(){
			${2}
			return (
			)
		}
	}
snippet rsc
	const ${1} = props => {
		return (
		${2}
		)
	}
snippet ipc
	import {h, render, Component} from 'preact'
snippet styled
	import styled from 'styled-components'
